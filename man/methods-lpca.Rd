% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods-logisticpca-lsvd.r,
%   R/methods-logisticpca-lpca.r, R/methods-logisticpca-clpca.r
\name{methods-lpca}
\alias{methods-lpca}
\alias{as_tbl_ord.lsvd}
\alias{recover_rows.lsvd}
\alias{recover_cols.lsvd}
\alias{recover_coord.lsvd}
\alias{recover_aug_rows.lsvd}
\alias{recover_aug_cols.lsvd}
\alias{recover_aug_coord.lsvd}
\alias{as_tbl_ord.lpca}
\alias{recover_rows.lpca}
\alias{recover_cols.lpca}
\alias{recover_coord.lpca}
\alias{recover_aug_rows.lpca}
\alias{recover_aug_cols.lpca}
\alias{recover_aug_coord.lpca}
\alias{as_tbl_ord.clpca}
\alias{recover_rows.clpca}
\alias{recover_cols.clpca}
\alias{recover_coord.clpca}
\alias{recover_aug_rows.clpca}
\alias{recover_aug_cols.clpca}
\alias{recover_aug_coord.clpca}
\title{Functionality for logistic PCA and logistic SVD objects}
\usage{
\method{as_tbl_ord}{lsvd}(x)

\method{recover_rows}{lsvd}(x)

\method{recover_cols}{lsvd}(x)

\method{recover_coord}{lsvd}(x)

\method{recover_aug_rows}{lsvd}(x)

\method{recover_aug_cols}{lsvd}(x)

\method{recover_aug_coord}{lsvd}(x)

\method{as_tbl_ord}{lpca}(x)

\method{recover_rows}{lpca}(x)

\method{recover_cols}{lpca}(x)

\method{recover_coord}{lpca}(x)

\method{recover_aug_rows}{lpca}(x)

\method{recover_aug_cols}{lpca}(x)

\method{recover_aug_coord}{lpca}(x)

\method{as_tbl_ord}{clpca}(x)

\method{recover_rows}{clpca}(x)

\method{recover_cols}{clpca}(x)

\method{recover_coord}{clpca}(x)

\method{recover_aug_rows}{clpca}(x)

\method{recover_aug_cols}{clpca}(x)

\method{recover_aug_coord}{clpca}(x)
}
\arguments{
\item{x}{An ordination object.}
}
\value{
The recovery generics \verb{recover_*()} return \link[=recoverers]{core model components}, \link[=conference]{distribution of inertia},
\link[=supplementation]{supplementary elements}, and \link[=augmentation]{intrinsic metadata}; but they require methods for each model class to
tell them what these components are.

The generic \code{\link[=as_tbl_ord]{as_tbl_ord()}} returns its input wrapped in the 'tbl_ord'
class. Its methods determine what model classes it is allowed to wrap. It
then provides 'tbl_ord' methods with access to the recoverers and hence to
the model components.

The recovery generics \verb{recover_*()} return \link[=recoverers]{core model components}, \link[=conference]{distribution of inertia},
\link[=supplementation]{supplementary elements}, and \link[=augmentation]{intrinsic metadata}; but they require methods for each model class to
tell them what these components are.

The generic \code{\link[=as_tbl_ord]{as_tbl_ord()}} returns its input wrapped in the 'tbl_ord'
class. Its methods determine what model classes it is allowed to wrap. It
then provides 'tbl_ord' methods with access to the recoverers and hence to
the model components.

The recovery generics \verb{recover_*()} return \link[=recoverers]{core model components}, \link[=conference]{distribution of inertia},
\link[=supplementation]{supplementary elements}, and \link[=augmentation]{intrinsic metadata}; but they require methods for each model class to
tell them what these components are.

The generic \code{\link[=as_tbl_ord]{as_tbl_ord()}} returns its input wrapped in the 'tbl_ord'
class. Its methods determine what model classes it is allowed to wrap. It
then provides 'tbl_ord' methods with access to the recoverers and hence to
the model components.
}
\description{
These methods extract data from, and attribute new data to,
objects of class \code{"lpca"} and \code{"lsvd"} from the
\strong{\link[logisticPCA:logisticPCA-package]{logisticPCA}} package.

These methods extract data from, and attribute new data to,
objects of class \code{"lpca"} and \code{"lsvd"} from the
\strong{\link[logisticPCA:logisticPCA-package]{logisticPCA}} package.

These methods extract data from, and attribute new data to,
objects of class \code{"lpca"} and \code{"lsvd"} from the
\strong{\link[logisticPCA:logisticPCA-package]{logisticPCA}} package.
}
\section{{Logistic SVD-based models}}{


Landgraf and Lee (2020) provide in their package \strong{logisticPCA} a new
implementation and extension of the logistic PCA introduced by Collins et al
(2001). These methods use techniques from generalized linear regression to
generalize classical principal components analysis (PCA) to the problem of
dimension reduction for binary data. The signature functions
\code{\link[logisticPCA:logisticPCA]{logisticPCA::logisticPCA()}}, \code{\link[logisticPCA:logisticSVD]{logisticPCA::logisticSVD()}}, and
\code{\link[logisticPCA:convexLogisticPCA]{logisticPCA::convexLogisticPCA()}} have \verb{*_ord()} wrappers that add row and
column names from the input matrix to the output matrices.



Landgraf and Lee (2020) provide in their package \strong{logisticPCA} a new
implementation and extension of the logistic PCA introduced by Collins et al
(2001). These methods use techniques from generalized linear regression to
generalize classical principal components analysis (PCA) to the problem of
dimension reduction for binary data. The signature functions
\code{\link[logisticPCA:logisticPCA]{logisticPCA::logisticPCA()}}, \code{\link[logisticPCA:logisticSVD]{logisticPCA::logisticSVD()}}, and
\code{\link[logisticPCA:convexLogisticPCA]{logisticPCA::convexLogisticPCA()}} have \verb{*_ord()} wrappers that add row and
column names from the input matrix to the output matrices.



Landgraf and Lee (2020) provide in their package \strong{logisticPCA} a new
implementation and extension of the logistic PCA introduced by Collins et al
(2001). These methods use techniques from generalized linear regression to
generalize classical principal components analysis (PCA) to the problem of
dimension reduction for binary data. The signature functions
\code{\link[logisticPCA:logisticPCA]{logisticPCA::logisticPCA()}}, \code{\link[logisticPCA:logisticSVD]{logisticPCA::logisticSVD()}}, and
\code{\link[logisticPCA:convexLogisticPCA]{logisticPCA::convexLogisticPCA()}} have \verb{*_ord()} wrappers that add row and
column names from the input matrix to the output matrices.
}

\examples{
# site-species data frame of Sanderson Galapagos finches data
data(finches, package = "cooccur")
class(finches)
finches[seq(6L), seq(6L)]

# logistic singular value decomposition
finches \%>\%
  t() \%>\%
  logisticSVD_ord() \%>\%
  as_tbl_ord() \%>\%
  print() -> finches_lsvd

# recover row and column singular vectors
get_rows(finches_lsvd)
get_cols(finches_lsvd)
# augment ordination with point names and main effect estimates
augment_ord(finches_lsvd)
# summarize artifical coordinates (inertia is undefined)
tidy(finches_lsvd)
\dontrun{
  confer_inertia(finches_lsvd, .5)
}

# biplot (inertia is not defined and cannot be conferred)
finches_lsvd \%>\%
  augment_ord() \%>\%
  ggbiplot(aes(label = name), sec.axes = "cols", scale.factor = 100) +
  theme_biplot() +
  geom_rows_vector(alpha = .5, color = "darkred") +
  geom_rows_text_radiate(size = 3, color = "darkred") +
  geom_cols_label(size = 3, alpha = .5, color = "royalblue3",
                  subset = grep("Geospiza", rownames(finches))) +
  geom_cols_point(alpha = .5, color = "royalblue3",
                  subset = -grep("Geospiza", rownames(finches))) +
  ggtitle(
    "Logistic SVD of the Galapagos island finches",
    "Islands (finches) scaled to the primary (secondary) axes"
  ) +
  expand_limits(x = c(-80, 60))
# site-species data frame of Sanderson Galapagos finches data
data(finches, package = "cooccur")
class(finches)
finches[seq(6L), seq(6L)]

# logistic PCA, omitting ubiquitous finches
finches \%>\%
  dplyr::filter(dplyr::if_any(where(is.integer), ~ . == 0)) \%>\%
  t() \%>\%
  logisticPCA_ord() \%>\%
  as_tbl_ord() \%>\%
  print() -> finches_lpca

# biplot (inertia is not defined and cannot be conferred)
finches_lpca \%>\%
  augment_ord() \%>\%
  ggbiplot(aes(label = name), sec.axes = "cols", scale.factor = 50) +
  theme_biplot() +
  geom_rows_vector(alpha = .5, color = "darkred") +
  geom_rows_text_radiate(size = 3, color = "darkred") +
  geom_cols_label(size = 3, alpha = .5, color = "royalblue3",
                  subset = grep("Geospiza", rownames(finches))) +
  geom_cols_point(alpha = .5, color = "royalblue3",
                  subset = -grep("Geospiza", rownames(finches))) +
  ggtitle(
    "Logistic PCA of the Galapagos island finches",
    "Islands (finches) scaled to the primary (secondary) axes"
  ) +
  expand_limits(x = c(-25, 35))
# site-species data frame of Sanderson Galapagos finches data
data(finches, package = "cooccur")
class(finches)
finches[seq(6L), seq(6L)]

# convex logistic PCA, omitting ubiquitous finches
finches \%>\%
  dplyr::filter(dplyr::if_any(where(is.integer), ~ . == 0)) \%>\%
  t() \%>\%
  convexLogisticPCA_ord() \%>\%
  as_tbl_ord() \%>\%
  print() -> finches_clpca

# biplot (inertia is not defined and cannot be conferred)
finches_clpca \%>\%
  augment_ord() \%>\%
  ggbiplot(aes(label = name), sec.axes = "cols", scale.factor = 50) +
  theme_biplot() +
  geom_rows_vector(alpha = .5, color = "darkred") +
  geom_rows_text_radiate(size = 3, color = "darkred") +
  geom_cols_label(size = 3, alpha = .5, color = "royalblue3",
                  subset = grep("Geospiza", rownames(finches))) +
  geom_cols_point(alpha = .5, color = "royalblue3",
                  subset = -grep("Geospiza", rownames(finches))) +
  ggtitle(
    "Convex logistic PCA of the Galapagos island finches",
    "Islands (finches) scaled to the primary (secondary) axes"
  ) +
  expand_limits(x = c(-25, 35))
}
\references{
Landgraf AJ & Lee Y (2020) "Dimensionality reduction for binary data through
the projection of natural parameters". \emph{Journal of Multivariate Analysis}
\strong{180}: 104668. \doi{10.1016/j.jmva.2020.104668}

Collins M, Dasgupta S, & Schapire RE (2001) "A Generalization of Principal
Components Analysis to the Exponential Family". \emph{Advances in Neural
Information Processing Systems 14 (NIPS 2001)}, Ed. Dietterich T, Becker S,
and Ghahramani Z, 617--624. A Bradford Book, ISBN 9780262042086.

Landgraf AJ & Lee Y (2020) "Dimensionality reduction for binary data through
the projection of natural parameters". \emph{Journal of Multivariate Analysis}
\strong{180}: 104668. \doi{10.1016/j.jmva.2020.104668}

Collins M, Dasgupta S, & Schapire RE (2001) "A Generalization of Principal
Components Analysis to the Exponential Family". \emph{Advances in Neural
Information Processing Systems 14 (NIPS 2001)}, Ed. Dietterich T, Becker S,
and Ghahramani Z, 617--624. A Bradford Book, ISBN 9780262042086.

Landgraf AJ & Lee Y (2020) "Dimensionality reduction for binary data through
the projection of natural parameters". \emph{Journal of Multivariate Analysis}
\strong{180}: 104668. \doi{10.1016/j.jmva.2020.104668}

Collins M, Dasgupta S, & Schapire RE (2001) "A Generalization of Principal
Components Analysis to the Exponential Family". \emph{Advances in Neural
Information Processing Systems 14 (NIPS 2001)}, Ed. Dietterich T, Becker S,
and Ghahramani Z, 617--624. A Bradford Book, ISBN 9780262042086.
}
\seealso{
Other methods for singular value decomposition-based techniques: 
\code{\link{methods-ade4}},
\code{\link{methods-ca-ca}},
\code{\link{methods-ca-mjca}},
\code{\link{methods-candisc-cancor}},
\code{\link{methods-nipals-empca}},
\code{\link{methods-nipals-nipals}},
\code{\link{methods-pma-cca}},
\code{\link{methods-pma-spc}}

Other methods for singular value decomposition-based techniques: 
\code{\link{methods-ade4}},
\code{\link{methods-ca-ca}},
\code{\link{methods-ca-mjca}},
\code{\link{methods-candisc-cancor}},
\code{\link{methods-nipals-empca}},
\code{\link{methods-nipals-nipals}},
\code{\link{methods-pma-cca}},
\code{\link{methods-pma-spc}}

Other methods for singular value decomposition-based techniques: 
\code{\link{methods-ade4}},
\code{\link{methods-ca-ca}},
\code{\link{methods-ca-mjca}},
\code{\link{methods-candisc-cancor}},
\code{\link{methods-nipals-empca}},
\code{\link{methods-nipals-nipals}},
\code{\link{methods-pma-cca}},
\code{\link{methods-pma-spc}}
}
\concept{methods for singular value decomposition-based techniques}
\concept{models from the \strong{logisticPCA} package}
