% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods-nipals-empca.r
\name{methods-nipals-empca}
\alias{methods-nipals-empca}
\alias{as_tbl_ord.empca_ord}
\alias{recover_rows.empca_ord}
\alias{recover_cols.empca_ord}
\alias{recover_inertia.empca_ord}
\alias{recover_coord.empca_ord}
\alias{recover_conference.empca_ord}
\alias{recover_aug_rows.empca_ord}
\alias{recover_aug_cols.empca_ord}
\alias{recover_aug_coord.empca_ord}
\title{Functionality for expectation maximization PCA ('empca_ord') objects}
\usage{
\method{as_tbl_ord}{empca_ord}(x)

\method{recover_rows}{empca_ord}(x)

\method{recover_cols}{empca_ord}(x)

\method{recover_inertia}{empca_ord}(x)

\method{recover_coord}{empca_ord}(x)

\method{recover_conference}{empca_ord}(x)

\method{recover_aug_rows}{empca_ord}(x)

\method{recover_aug_cols}{empca_ord}(x)

\method{recover_aug_coord}{empca_ord}(x)
}
\arguments{
\item{x}{An ordination object.}
}
\value{
The recovery generics \verb{recover_*()} return \link[=recoverers]{core model components}, \link[=conference]{distribution of inertia},
\link[=supplementation]{supplementary elements}, and \link[=augmentation]{intrinsic metadata}; but they require methods for each model class to
tell them what these components are.

The generic \code{\link[=as_tbl_ord]{as_tbl_ord()}} returns its input wrapped in the 'tbl_ord'
class. Its methods determine what model classes it is allowed to wrap. It
then provides 'tbl_ord' methods with access to the recoverers and hence to
the model components.
}
\description{
These methods extract data from, and attribute new data to,
objects of class \code{"empca_ord"}. This is a class introduced in this package
to identify objects returned by \code{\link[=empca_ord]{empca_ord()}}, which wraps
\code{\link[nipals:empca]{nipals::empca()}}.
}
\examples{
# incomplete air quality measurements from New York
class(airquality)
head(airquality)
# single date variable
airquality \%>\%
  transform(Date = as.Date(paste("1973", Month, Day, sep = "-"))) \%>\%
  subset(select = -c(Month, Day)) ->
  air_quality
# random weights
rand_wts <- matrix(nrow = nrow(air_quality), ncol = ncol(air_quality) - 1L)
rand_wts[] <- runif(n = prod(dim(rand_wts)))

# EMPCA on weighted air quality measures
air_empca <-
  ordinate(x = air_quality, model = empca_ord, cols = 1:4, w = rand_wts)

# compare original and fitted data
head(air_quality)
{ get_rows(air_empca) \%*\%
    diag(get_inertia(air_empca)) \%*\%
    t(get_cols(air_empca)) } \%>\%
  sweep(2L, air_empca$scale, "*") \%>\%
  sweep(2L, air_empca$center, "+") \%>\%
  head()
}
\seealso{
Other methods for singular value decomposition-based techniques: 
\code{\link{methods-ade4}},
\code{\link{methods-ca-ca}},
\code{\link{methods-ca-mjca}},
\code{\link{methods-candisc-cancor}},
\code{\link{methods-lpca}},
\code{\link{methods-nipals-nipals}},
\code{\link{methods-pma-cca}},
\code{\link{methods-pma-spc}}

Other models from the \strong{nipals} package: 
\code{\link{methods-nipals-nipals}}
}
\concept{methods for singular value decomposition-based techniques}
\concept{models from the \strong{nipals} package}
